// Global variables

$color-cardbackground: #41ca1762;
$color-default: #bbb3b3;
$color-cardfont: #023a0b;
$color-title: #bbb3b3;
$color-pageBackground: #464242;

// Set base properties of all components
* {
    padding: 0;
    margin: 0;
    box-sizing: border-box;
    // Tell child elements to compute their own line-height (rather than inheriting raw number from parent)
    line-height: normal;
}

html {
    /* Setting the size of one rem, means that 1 rem will equal 10px */
    font-size: 10px;
    height: 100%;
}

body {
    // font-family: "Lato", "Courier New";
    // font-family: "Charm", "Courier New";
    font-family: "Stint Ultra Condensed", "Courier New";
    background-color: rgba($color: $color-pageBackground, $alpha: 1);
    top: 0px;
    color: $color-default;
}

.page_container {
    display: grid;
    grid-template-columns: 20vw 1fr;
    grid-template-rows: 6vw 1fr;
    width: 100%;
    grid-gap: 0;
}

.title_container {
    grid-area: 1 / 1 / span 1 / span 2;
    padding: 1rem 1rem 1rem 2rem;

    .title {
        font-family: "Lato", "Courier New";
        font-size: 3vw;
        color: $color-title;
    }
}

.leftNav_container {
    grid-area: 2 / 1 / span 1 / span 2;
    padding: 10px;
    font-size: 2.5vw;

    .navTitle {
        display: block;
        padding-bottom: 2vw;
    }
    .navPageNavigation a {
        display: block;
    }
}

.centerPanel_container {
    grid-area: 2 / 2 / span 1 / span 1;
}

.dataCard_container {
    display: grid;
    grid-template-columns: repeat(6, 1fr);
    grid-template-rows: repeat(6, 1fr);
    height: 60vw;
    grid-gap: 1rem;
    margin: 0 1.5rem 0 1.5rem;

    .dataCard {
        background-color: $color-cardbackground;
        color: $color-cardfont;
        border-radius: 0.2rem;
        padding: 0.5rem;
        width: 100%;
        height: 100%;

        // Center the content in the dataCard (combined with margin:auto in cardBody)
        display: flex;
        overflow: auto;

        .cardBody {
            // Used for occasional troubleshooting
            // border: 1px solid #00000015;

            // keep the list bullets inside the div
            // list-style-position: inside;
            font-size: 1.4vw;
            font-family: "Stint Ultra Condensed", "Courier New";
            color: rgba($color: #eee, $alpha: 1);
            // Align content
            margin: auto;
            min-height: 100%;
            min-width: 100%;

            // For widgets with text, I want display=inline
            display: inline;

            table.scrollableTable tbody {
                color: gray;
                display: block;
                overflow: auto;
                height: 100%;
            }
            table.scrollableTable thead {
                color: lightslategrey;
                display: block;
            }

            table tr td {
                border: 1px solid rgba(0, 0, 0, 0.356);
                padding: 0.1rem 0.1rem;
                // line-height: 0.6rem;
            }
            .single-num-title {
                font-size: 1.8vw;
                // line-height: 2rem;
                text-align: center;
            }
            .single-num-value {
                font-size: 3.8vw;
                // line-height: 4rem;
                text-align: center;
                // line-height: normal;ÃŸ
            }
        }

        // Scrolling Table Widget
        .fullCardContainer {
            min-width: 100%;
        }
        .headerTable {
            min-width: 100%;
        }
        .bodyTableContainerDiv {
            display: block;
            overflow-x: auto;
            overflow-y: auto;
            // height gets set by javascript since we need to calculate in real-time
            table.scrollableTable {
                color: blue;
                min-width: 100%;
            }
            table tbody {
                color: gray;
                border-collapse: collapse;
            }
        }
    }

    // This is the grid item (for charts)
    .chartCard {
        background-color: $color-cardbackground;
        border-radius: 0.2rem;
        width: 100%;
        height: 100%;
        // Don't add padding here, add it to the canvas

        canvas {
            // Spacing around the canvas/chart
            padding: 1.5rem;

            // There are way to make the chart.js responsive
            // PreReq: The chart.js needs to have option:responive on it.  Probably also maintainAspectRatio:false, then there are two solutions
            // 1) The div containing this canvas needs to be a *direct* child of the grid item.  You stick an extra <div> in there, it all falls apart (though solution #2 would still work)
            // 2) The canvas needs to have width/height as 100% !important.  This forces it's known size upwards to the divs
            // NOTE: I prefer avoiding !important, so opting for solution #1, but leaving these two lines here just in case of emergency.
            // width: 100% !important;
            // height: 100% !important;
        }
    }
}
