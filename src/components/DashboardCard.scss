// Global variables

$color-pageBackground: #333b50;
$color-cardbackground: #2b2d3e;
$color-default: #bbb3b3;
$color-cardfont: #eeeeee;
$color-title: #bbb3b3;
$color-widget-links: #4183c4;
$color-leftNav-links: #4183c4;

// Set base properties of all components
* {
    padding: 0;
    margin: 0;
    box-sizing: border-box;
    // Tell child elements to compute their own line-height (rather than inheriting raw number from parent)
    line-height: normal;
}

html {
    /* Setting the size of one rem, means that 1 rem will equal 10px */
    font-size: 10px;
}

body {
    // font-family: "Lato", "Courier New";
    // font-family: "Charm", "Courier New";
    font-family: "Stint Ultra Condensed", "Courier New";
    background-color: rgba($color: $color-pageBackground, $alpha: 1);
    top: 0px;
    color: $color-default;
}

// The entire page.   Creates the grid to contain the title (at top), navigation (on left), and the container for the widgets
.page_container {
    display: grid;
    grid-template-columns: 12vw 1fr;
    grid-template-rows: 6vw 1fr;
    width: 100%;
    grid-gap: 0;
}

// The title container at the top of the page.  Needs to span two columns
.title_container {
    grid-area: 1 / 1 / span 1 / span 2;
    padding: 1rem 1rem 1rem 2rem;

    .title {
        font-family: "Lato", "Courier New";
        font-size: 3vw;
        color: $color-title;
    }
}

// Container on the left for all the navigation
.leftNav_container {
    grid-area: 2 / 1 / span 1 / span 2;
    padding: 10px;
    font-size: 1.3vw;

    .navTitle {
        display: block;
        padding-bottom: 2vw;
    }
    .navPageNavigation {
        a {
            padding: 5px 0 0 0;
            color: $color-leftNav-links;
            display: block;
            transition: all 0.2s ease-in-out;
            &:hover {
                font-size: 1.5vw;
                color: lighten($color-leftNav-links, 10%);
            }
        }
    }
}

// Contains all the widgets
.centerPanel_container {
    grid-area: 2 / 2 / span 1 / span 1;
}

// Remove the normal styling from hyperlinks in this particular widget
.dataCard#WidgetLeankitDiscoverySolutioningCardList td a {
    color: $color-cardfont;
    text-decoration: none;
    &:hover {
        color: $color-widget-links;
    }
}

.dataCard_container {
    display: grid;
    grid-template-columns: repeat(6, 1fr);
    grid-template-rows: repeat(6, 1fr);
    height: 60vw;
    grid-gap: 1rem;
    margin: 0 1.5rem 0 1.5rem;

    .dataCard {
        background-color: $color-cardbackground;
        color: $color-cardfont;
        border-radius: 0.2rem;
        padding: 0.5rem;
        width: 100%;
        height: 100%;

        // Center the content in the dataCard (combined with margin:auto in .cardBody)
        display: flex;
        overflow: auto;

        .cardBody {
            // Used for occasional troubleshooting
            // border: 1px solid #00000015;

            font-size: 1.4vw;
            font-family: "Nunito", "Courier New";

            // Align content - works in tandem with the display:flex in .dataCard
            // NOTE: Centering content left/right is easy without flex.  Centering up/down is tricky.  display:flex (parent) and margin:auto (child) make that easy
            margin: auto;

            min-height: 100%;
            min-width: 100%;

            // For widgets with text, I want display=inline
            // display: inline;
            // On 2019-01-20, did some experimenting, and removed this.  Testing seems fine.  Without it, seems to default to display:block

            // Typically used for large single numbers, outside of tables
            .redFont {
                color: red;
            }
            .orangeFont {
                color: orange;
            }
            .greenFont {
                color: green;
            }

            table {
                border-collapse: collapse;
                tr {
                    td {
                        border: 1px solid rgba(0, 0, 0, 0.356);
                        padding: 0.2rem 0.5rem 0.2rem 0.5rem;
                        font-size: 0.7vw;

                        &.redFont {
                            color: red;
                            font-weight: 900;
                        }
                        &.orangeFont {
                            color: orange;
                            font-weight: 900;
                        }
                        &.greenFont {
                            color: green;
                            font-weight: 900;
                        }

                        &.tdRed {
                            color: red;
                        }
                    }
                    th {
                        font-size: 0.8vw;
                        font-weight: 800;
                    }
                }
            }
            .single-num-title {
                font-size: 1.1vw;
                // line-height: 2rem;
                text-align: center;
            }
            .single-num-value {
                font-size: 3.3vw;
                // line-height: 4rem;
                text-align: center;
                // line-height: normal;ÃŸ
            }

            // NOTE: As of 2019-01-20, pretty sure this never gets used
            // // This is inside .cardBody
            // table.scrollableTable tbody {
            //     color: gray;
            //     display: block;
            //     overflow: auto;
            //     height: 100%;
            // }
            // table.scrollableTable thead {
            //     color: lightslategrey;
            //     display: block;
            // }
        }

        // Scrolling Table Widget
        // This actually uses two tables, one table for the header row, and one for all the data
        .fullCardContainer {
            // By default, div shrink to fit the data inside it.  This forces the div it expand to the full width of it's parent
            min-width: 100%;

            .headerTable {
                min-width: 100%;
            }
            .bodyTableContainerDiv {
                // Needs to be display:block.  div defaults to display:block, but let's just be sure
                display: block;
                // overflow only works on block elements
                overflow-x: auto;
                overflow-y: auto;
                // NOTE: height of .bodyTableContainerDiv gets set by javascript since we need to calculate in real-time

                table.scrollableTable {
                    // the idea is that this table is larger than it's parent div, and as you scroll the parent div, this table goes up and down

                    // Forces table to occupy entire width of parent element, otherwise it shrinks to fit data
                    min-width: 100%;
                    tbody {
                        color: pink;
                        border-collapse: collapse;
                        tr td {
                            border: 1px solid white;
                        }
                    }
                }
            }
        }
    }

    // This is the grid item (for charts)
    .chartCard {
        background-color: $color-cardbackground;
        border-radius: 0.2rem;
        width: 100%;
        height: 100%;
        // Don't add padding here, add it to the canvas

        canvas {
            // Spacing around the canvas/chart
            padding: 1.5rem;

            // There are way to make the chart.js responsive
            // PreReq: The chart.js needs to have option:responive on it.  Probably also maintainAspectRatio:false, then there are two solutions
            // 1) The div containing this canvas needs to be a *direct* child of the grid item.  You stick an extra <div> in there, it all falls apart (though solution #2 would still work)
            // 2) The canvas needs to have width/height as 100% !important.  This forces it's known size upwards to the divs
            // NOTE: I prefer avoiding !important, so opting for solution #1, but leaving these two lines here just in case of emergency.
            // width: 100% !important;
            // height: 100% !important;
        }
    }
}
